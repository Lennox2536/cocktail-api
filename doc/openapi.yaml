openapi: 3.0.3
info:
  title: Cocktails API
  version: 0.3.0
tags:
  - name: Cocktails
    description: Everything about cocktails
  - name: Ingredients
    description: Everything about ingredients
  - name: Orders
    description: Everything about orders
  - name: Auth
    description: Everything about security
paths:
  /cocktails:
    get:
      tags:
        - Cocktails
      summary: Get list of cocktails
      operationId: cocktailsIndex
      parameters:
        - name: alcoholic
          in: query
          description: If the cocktail is alcoholic or not
          required: false
          schema:
            type: boolean
            example: true
        - name: page
          in: query
          description: Allows you to set page and use pagination.
          schema:
            type: number
            default: 1
        - name: perPage
          in: query
          description: Allows you to set how many records are shown on the page.
          schema:
            type: number
            default: 15
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cocktail'
                  meta:
                    $ref: '#/components/schemas/Meta'
    post:
      tags:
        - Cocktails
      summary: Create a new cocktail
      operationId: cocktailCreate
      requestBody:
        description: Cocktail's attributes
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Mojito'
                category:
                  type: string
                  example: 'Other'
                instructions:
                  type: string
                ingredients:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      quantity:
                        type: string
                        example: '13'
              required:
                - name
                - category
                - intructions
                - ingredients
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cocktail'
        '401':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '422':
          description: Faiure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /cocktails/{id}:
    get:
      tags:
        - Cocktails
      summary: Get a specific cocktail
      operationId: cocktailShow
      parameters:
        - name: id
          schema:
            type: integer
            example: 1
          in: path
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cocktail'
        '404':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    put:
      tags:
        - Cocktails
      summary: Update a specific cocktail
      operationId: cocktailUpdate
      parameters:
        - name: id
          schema:
            type: integer
            example: 1
          in: path
          required: true
      requestBody:
        description: Cocktail's attributes
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Mojito'
                category:
                  type: string
                  example: 'Other'
                instructions:
                  type: string
                ingredients:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      quantity:
                        type: string
                        example: '13'
              required:
                - name
                - category
                - intructions
                - ingredients
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cocktail'
        '401':
          description: Unauthorized Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden ailure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not Found Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '422':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    delete:
      tags:
        - Cocktails
      summary: Delete a specific cocktail
      operationId: cocktailDelete
      parameters:
        - name: id
          schema:
            type: integer
            example: 1
          in: path
          required: true
      responses:
        '204':
          description: successful operation
        '401':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /ingredients:
    get:
      tags:
        - Ingredients
      summary: Get list of ingredients
      operationId: ingredientsIndex
      parameters:
        - name: alcoholic
          in: query
          description: If the ingredient is alcoholic or not
          required: false
          schema:
            type: boolean
            example: true
        - name: page
          in: query
          description: Allows you to set page and use pagination.
          schema:
            type: number
            default: 1
        - name: perPage
          in: query
          description: Allows you to set how many records are shown on the page.
          schema:
            type: number
            default: 15
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ingredient'
                  meta:
                    $ref: '#/components/schemas/Meta'
    post:
      tags:
        - Ingredients
      summary: Create a new ingredient
      operationId: ingredientCreate
      requestBody:
        description: Ingredient's attributes
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Orange Juice'
                description:
                  type: string
                alcohol:
                  type: boolean
                  example: false
                imageUrl:
                  type: string
              required:
                - name
                - description
                - alcohol
                - imageUrl
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
        '401':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '422':
          description: Faiure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /ingredients/{id}:
    get:
      tags:
        - Ingredients
      summary: Get a specific ingredient
      operationId: ingredientShow
      parameters:
        - name: id
          schema:
            type: integer
            example: 1
          in: path
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
        '404':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    put:
      tags:
        - Ingredients
      summary: Update a specific ingredient
      operationId: ingredientUpdate
      parameters:
        - name: id
          schema:
            type: integer
            example: 1
          in: path
          required: true
      requestBody:
        description: Cocktail's attributes
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Orange Juice'
                description:
                  type: string
                alcohol:
                  type: boolean
                  example: false
                imageUrl:
                  type: string
              required:
                - name
                - description
                - alcohol
                - imageUrl
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
        '401':
          description: Unauthorized Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden ailure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not Found Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '422':
          description: Bad Request Faiure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    delete:
      tags:
        - Ingredients
      summary: Delete a specific ingredient
      operationId: ingredientDelete
      parameters:
        - name: id
          schema:
            type: integer
            example: 1
          in: path
          required: true
      responses:
        '204':
          description: successful operation
        '401':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /orders:
    get:
      tags:
        - Orders
      summary: Get list of orders
      operationId: ordersIndex
      parameters:
        - name: page
          in: query
          description: Allows you to set page and use pagination.
          schema:
            type: number
            default: 1
        - name: perPage
          in: query
          description: Allows you to set how many records are shown on the page.
          schema:
            type: number
            default: 15
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  meta:
                    $ref: '#/components/schemas/Meta'
    post:
      tags:
        - Orders
      summary: Create a new order
      operationId: orderCreate
      requestBody:
        description: Order's attributes
        content:
          application/json:
            schema:
              type: object
              properties:
                cocktails:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      quantity:
                        type: string
                        example: '13'
              required:
                - name
                - category
                - intructions
                - ingredients
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '422':
          description: Faiure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get a specific order
      operationId: orderShow
      parameters:
        - name: id
          schema:
            type: integer
            example: 1
          in: path
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    delete:
      tags:
        - Orders
      summary: Delete a specific order
      operationId: orderlDelete
      parameters:
        - name: id
          schema:
            type: integer
            example: 1
          in: path
          required: true
      responses:
        '204':
          description: successful operation
        '401':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /login:
    post:
      tags:
        - Auth
      summary: Login and obtain the token
      description: Allows you to login and obtain the token that will be used for authentication and authorization in further app usage.
      operationId: login
      requestBody:
        description: user credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    example: 'bearer'
                  value:
                    type: string
                    example: 'token'
        '400':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /register:
    post:
      tags:
        - Auth
      summary: Register into the system
      description: Allows you to register
      operationId: register
      requestBody:
        description: user credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '204':
          description: Successful registration
        '422':
          description: Failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
components:
  schemas:
    Cocktail:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: 'Mojito'
        category:
            $ref: '#/components/schemas/CocktailCategory'
        instructions:
          type: string
          nullable: true
          example: 'Muddle mint leaves with sugar and lime juice. Add a splash of soda water and fill the glass with cracked ice. Pour the rum and top with soda water. Garnish and serve with straw'
        alcoholic:
          type: boolean
          example: true
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/CocktailIngredient'
    CocktailCategory:
      type: string
      enum:
        - Classics
        - Tiki
        - Frozen
        - Highballs
        - Sours
        - Tropical
        - Mocktails
        - Punches
        - Other
    CocktailIngredient:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 110
        name:
          type: string
          example: 'Orange juice'
    Ingredient:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 110
        name:
          type: string
          example: 'Orange juice'
        description:
          type: string
          nullable: true
          example: 'Orange juice'
        alcohol:
          type: boolean
          example: false
        imageUrl:
          type: string
          nullable: true
          example: 'https://cocktails.solvro.pl/images/cocktails/mojito.png'
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 110
        orderDate:
          type: string
          format: date-time
          example: '2024-10-31T21:17:38.988Z'
        cocktails:
          type: array
          items:
            $ref: '#/components/schemas/OrderCocktail'
    OrderCocktail:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 110
        name:
          type: string
          example: 'Mojito'
        alcoholic:
          type: boolean
          example: true
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        message:
          type: string
          example: 'Error message'
    Meta:
      type: object
      properties:
        total:
          type: integer
          format: int64
          example: 133
        perPage:
          type: integer
          format: int64
          example: 15
        currentPage:
          type: integer
          format: int64
          example: 1
        lastPage:
          type: integer
          format: int64
          example: 9
        firstPage:
          type: integer
          format: int64
          example: 1
        firstPageUrl:
          type: string
          example: '/?page=1'
        lastPageUrl:
          type: string
          example: '/?page=9'
        nextPageUrl:
          type: string
          nullable: true
          example: '/?page=2'
        previousPageUrl:
          type: string
          nullable: true
          example: '/?page=1'
